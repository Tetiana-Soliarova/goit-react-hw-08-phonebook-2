{"version":3,"sources":["component/ContactForm/Fade.module.css","component/Filter/styles.module.css","FilterFade.module.css","component/ContactList/pop.module.css","redux/contacts/contacts-operations.js","component/Alert/alert.jsx","redux/contacts/contacts-selectors.js","component/Filter/Filter.js","component/ContactForm/Form.js","../node_modules/react-transition-group/esm/utils/ChildMapping.js","../node_modules/react-transition-group/esm/TransitionGroup.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","component/ContactList/ContactItem.jsx","component/ContactList/ContactList.jsx","component/ContactForm/Phonebook.js","component/ContactList/contactStyles.module.css","component/ContactForm/form.module.css","component/Alert/styleAlert.module.css"],"names":["module","exports","fetchContact","dispatch","fetchContactRequest","axios","get","then","data","fetchContactSuccess","catch","error","fetchContactError","message","Alert","className","styleAlert","alert","getLoading","state","contacts","loading","getContacts","items","getValueFilter","filter","getVisibleItems","createSelector","normalizedFilter","toLowerCase","contact","name","includes","connect","value","onChange","e","contactsActions","currentTarget","styles","filtr","label","input","type","ContactForm","number","hendleNameChange","event","setState","hendleSubmit","preventDefault","props","find","target","elements","setTimeout","onSubmit","reset","this","container","CSSTransition","in","timeout","classNames","fade","unmountOnExit","buttomForm","length","filterFade","onExiting","clearFilter","isLoading","Component","text","addContactRequest","post","addContactSuccess","addContactError","massage","changeFilter","contactsOperations","getChildMapping","children","mapFn","result","Object","create","Children","map","c","forEach","child","key","isValidElement","mapper","getProp","prop","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","prev","next","getValueForKey","i","nextKeysPending","pendingKeys","prevKey","push","childMapping","nextKey","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","cloneElement","bind","exit","enter","values","obj","k","TransitionGroup","_React$Component","context","_this","handleExited","call","self","ReferenceError","_assertThisInitialized","contextValue","isMounting","firstRender","_inheritsLoose","_proto","prototype","componentDidMount","mounted","componentWillUnmount","getDerivedStateFromProps","_ref","appear","node","currentChildMapping","_extends","render","_this$props","component","childFactory","_objectWithoutPropertiesLoose","React","createElement","TransitionGroupContext","Provider","propTypes","defaultProps","ContactItem","id","onDeleteContact","item","buttonContact","onClick","deleteContact","contactId","deleteTodoRequest","delete","deleteTodoSuccess","deleteTodoError","fetchContacts","style","title","contactList","popTransition","Phonebook"],"mappings":"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","file":"static/js/3.86dee492.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Fade_enter__Allee\",\"enterActive\":\"Fade_enterActive__3SGNu\",\"exit\":\"Fade_exit__19Bc2\",\"exitActive\":\"Fade_exitActive__1LmwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"styles_label__2BduY\",\"filtr\":\"styles_filtr__3YmOc\",\"input\":\"styles_input__2hw5x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"FilterFade_enter__oWYIR\",\"enterActive\":\"FilterFade_enterActive__2j2c9\",\"exit\":\"FilterFade_exit__ippW5\",\"exitActive\":\"FilterFade_exitActive__1IvL0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__30RLr\",\"enterActive\":\"pop_enterActive__2PqmX\",\"exit\":\"pop_exit__3Mamn\",\"exitActive\":\"pop_exitActive__3gebz\"};","import axios from 'axios';\r\nimport  {addContactRequest,  addContactSuccess, addContactError, deleteTodoRequest,deleteTodoSuccess, deleteTodoError, fetchContactRequest, fetchContactSuccess, fetchContactError} from './contacts-actions'\r\n\r\n//axios.defaults.baseURL = 'http://localhost:4040';\r\n\r\n export const fetchContact = () => dispatch => { \r\n    dispatch(fetchContactRequest());\r\n\r\n    axios\r\n        .get(`/contacts`)\r\n        .then(({data}) =>\r\n            dispatch(fetchContactSuccess(data) ),\r\n        )\r\n        .catch(error => dispatch(fetchContactError(error.message) ));\r\n}\r\n\r\nexport const addContact = (text) => dispatch => {\r\n  const contact = {\r\n    name: text.name,\r\n    number: text.number,\r\n  };\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post(`/contacts`, contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error.massage)));\r\n};\r\n\r\nexport const deleteTodo = contactId => dispatch => { \r\n    dispatch(deleteTodoRequest());\r\n\r\n    axios\r\n        .delete(`/contacts/${contactId}`)\r\n        .then(() =>\r\n            dispatch(deleteTodoSuccess(contactId) ),\r\n        )\r\n        .catch(error => dispatch(deleteTodoError(error.message) ));\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport styleAlert from \"./styleAlert.module.css\";\r\n\r\nfunction Alert() {\r\n  return (\r\n    <div className={styleAlert.alert}>\r\n      <h1 className={styleAlert.error}> Contacts already exists! </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import {  createSelector } from '@reduxjs/toolkit'\r\n\r\n/*Form*/\r\nexport const getLoading = state => state.contacts.loading;\r\nexport const getContacts = state => state.contacts.items;\r\n\r\n/*Filter*/\r\nexport const getValueFilter = state => state.contacts.filter;\r\n\r\n/*ContactsList*/\r\nexport const getVisibleItems = createSelector(\r\n    [getContacts, getValueFilter],\r\n    (contacts, filter) => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n    }\r\n)\r\n/*export const getVisibleItems = state => {\r\n    const contacts = getContacts(state);\r\n    const filter = getValueFilter(state);\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n}*/","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './styles.module.css'\r\nimport * as  contactsActions from '../../redux/contacts/contacts-actions'\r\nimport { connect } from 'react-redux';\r\nimport {getValueFilter} from '../../redux/contacts/contacts-selectors'\r\n\r\n\r\n\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div className={styles.filtr}>\r\n      <label className={styles.label}>Find contacts by name</label>\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: getValueFilter(state),\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) =>\r\n    dispatch(contactsActions.changeFilter(e.currentTarget.value)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { Component } from 'react';\r\nimport styles from './form.module.css';\r\nimport * as contactsOperations from '../../redux/contacts/contacts-operations';\r\nimport { connect } from 'react-redux';\r\nimport {changeFilter}  from '../../redux/contacts/contacts-actions'\r\nimport Alert from '../Alert/alert';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport fade from './Fade.module.css';\r\nimport Filter from '../Filter/Filter';\r\nimport filterFade from '../../FilterFade.module.css';\r\nimport { getLoading, getContacts } from \"../../redux/contacts/contacts-selectors\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    error: false,\r\n    \r\n  }\r\n\r\ncomponentDidMount() {\r\n    this.props.fetchContact();\r\n}\r\n\r\n\r\n  //метод который обновляет состояние\r\n  hendleNameChange = (event) => {\r\n    const { name, value } = event.currentTarget\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  //метод который Submit form\r\n  hendleSubmit = (event) => {\r\n    event.preventDefault()\r\n    if (\r\n      this.props.contacts.find(\r\n        (items) => items.name === event.target.elements[0].value,\r\n      )\r\n    ) {\r\n      this.setState({\r\n        error: true,\r\n      })\r\n\r\n      return setTimeout(() => {\r\n        this.setState({\r\n          error: false,\r\n        })\r\n      }, 2500)\r\n    }\r\n    this.props.onSubmit(this.state)\r\n\r\n    this.reset()\r\n  }\r\n\r\n  //очистка форми\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className={styles.container}>\r\n          <CSSTransition\r\n            in={this.state.error}\r\n            timeout={250}\r\n            classNames={fade}\r\n            unmountOnExit\r\n          >\r\n            <Alert />\r\n          </CSSTransition>\r\n\r\n          <form onSubmit={this.hendleSubmit}>\r\n            <label className={styles.label}>\r\n              Name\r\n              <input\r\n                className={styles.input}\r\n                name=\"name\"\r\n                type=\"text\"\r\n                value={this.state.name}\r\n                onChange={this.hendleNameChange}\r\n              />\r\n            </label>\r\n\r\n            <label className={styles.label}>\r\n              Number\r\n              <input\r\n                className={styles.input}\r\n                name=\"number\"\r\n                type=\"tel\"\r\n                value={this.state.number}\r\n                onChange={this.hendleNameChange}\r\n              />\r\n            </label>\r\n            <button className={styles.buttomForm} type=\"submit\">\r\n              Add contact\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <CSSTransition\r\n          in={this.props.contacts.length > 1}\r\n          timeout={250}\r\n          classNames={filterFade}\r\n          unmountOnExit\r\n          onExiting={() => this.props.clearFilter()}\r\n        >\r\n          <Filter />\r\n        </CSSTransition>\r\n        {this.props.isLoading && <h1  className={styles.loading}>Загружаем...</h1>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts:  getContacts(state),\r\n  isLoading: getLoading(state),\r\n  \r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (name, number) =>\r\n    dispatch(contactsOperations.addContact(name, number)),\r\n  clearFilter: () => dispatch(changeFilter(\"\")),\r\n  fetchContact: () => dispatch(contactsOperations.fetchContact()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./contactStyles.module.css\";\r\n\r\nconst ContactItem = ({ name, number, id, onDeleteContact }) => {\r\n  return (\r\n    <li className={styles.item} key={id}>\r\n      <p className={styles.name}>{name}</p>\r\n      <p className={styles.number}>{number}</p>\r\n\r\n      <button\r\n        className={styles.buttonContact}\r\n        type=\"button\"\r\n        onClick={onDeleteContact}\r\n      ></button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport ContactItem from \"./ContactItem\";\r\nimport popTransition from \"./pop.module.css\";\r\nimport style from \"./contactStyles.module.css\";\r\nimport * as contactsOperations from \"../../redux/contacts/contacts-operations\";\r\nimport { getVisibleItems } from \"../../redux/contacts/contacts-selectors\";\r\n\r\nconst ContactList = ({ contacts, deleteContact, clearFilter }) => {\r\n  return (\r\n    <div>\r\n      <h2 className={style.title}>Contacts</h2>\r\n      <TransitionGroup component=\"ul\" className={style.contactList}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <CSSTransition key={id} timeout={250} classNames={popTransition}>\r\n            <ContactItem\r\n              key={id}\r\n              id={id}\r\n              name={name}\r\n              number={number}\r\n              onDeleteContact={() => deleteContact(id)}\r\n            />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getVisibleItems(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  deleteContact: (id) => dispatch(contactsOperations.deleteTodo(id)),\r\n  fetchContacts: () => dispatch(contactsOperations.fetchContact()),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import { Component } from 'react';\r\nimport ContactForm from './Form';\r\nimport ContactList from '../ContactList/ContactList';\r\n\r\nclass Phonebook extends Component{\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ContactForm />\r\n                <ContactList/>\r\n               \r\n            </div>\r\n       )\r\n   } \r\n}\r\nexport default Phonebook;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"contactStyles_item__1w18f\",\"title\":\"contactStyles_title__3y5qY\",\"contactList\":\"contactStyles_contactList__W94Ss\",\"buttonContact\":\"contactStyles_buttonContact__22w_6\",\"icon\":\"contactStyles_icon__3Zfx6\",\"name\":\"contactStyles_name__380We\",\"number\":\"contactStyles_number__XNK3g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"form_input__1-ECV\",\"label\":\"form_label__Dw8vG\",\"buttomForm\":\"form_buttomForm__1cprY\",\"container\":\"form_container__2B0_S\",\"loading\":\"form_loading__1z3NJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"styleAlert_alert__3cD15\",\"error\":\"styleAlert_error__1ND-4\",\"fade-enter\":\"styleAlert_fade-enter__4844j\",\"fade-enter-active\":\"styleAlert_fade-enter-active__2Oa7W\",\"fade-exit\":\"styleAlert_fade-exit__3ToCu\",\"fade-exit-active\":\"styleAlert_fade-exit-active__3OSMz\"};"],"sourceRoot":""}